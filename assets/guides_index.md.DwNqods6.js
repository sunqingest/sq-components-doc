import{_ as t,p as l,c as r,j as a,a as p,t as d,a2 as i,N as o,k as h,a3 as k,o as u}from"./chunks/framework.BY6aP3Bi.js";const c="/repo/assets/1.DhOW52c8.jpeg",b="_btn_1kker_2",m={btn:b},M=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"guides/index.md","filePath":"guides/index.md"}'),g={name:"guides/index.md"},E=Object.assign(g,{setup(f){const e=l("1"),n=k();return console.log(n),(v,s)=>(u(),r("div",null,[s[1]||(s[1]=a("h2",{id:"在-markdown-使用-vue",tabindex:"-1"},[p("在 Markdown 使用 Vue "),a("a",{class:"header-anchor",href:"#在-markdown-使用-vue","aria-label":'Permalink to "在 Markdown 使用 Vue"'},"​")],-1)),a("p",null,"直接使用 vue 的插值语法"+d(e.value),1),s[2]||(s[2]=i(`<p>也可以使用指令 (请注意，原始 HTML 在 Markdown 中也有效)</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在 VitePress 中，每个 Markdown 文件都被编译成 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，而且将其作为 Vue 单文件组件处理。</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在 VitePress 中，每个 Markdown 文件都被编译成 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。直接使用元素标签</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">避免在 Markdown 中使用 style scoped</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在 Markdown 中使用时，style scoped 需要为当前页面的每个元素添加特殊属性，这将显著增加页面的大小。当我们需要局部范围的样式时 style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">module</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 是首选</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2)),a("p",null,[a("button",{style:o(h(n).btn),onClick:s[0]||(s[0]=_=>e.value++)},"点击我",4)]),s[3]||(s[3]=i('<h2 id="md-图片语法-并且懒加载" tabindex="-1">md 图片语法 并且懒加载 <a class="header-anchor" href="#md-图片语法-并且懒加载" aria-label="Permalink to &quot;md 图片语法 并且懒加载&quot;">​</a></h2><p><img src="'+c+'" alt="图片展示" title="hh"></p><h2 id="使用-github-风格的表情" tabindex="-1">使用 github 风格的表情 <a class="header-anchor" href="#使用-github-风格的表情" aria-label="Permalink to &quot;使用 github 风格的表情&quot;">​</a></h2><p>😘 🖕 这里可以找到<a href="https://github.com/markdown-it/markdown-it-emoji/blob/master/lib/data/full.mjs" target="_blank" rel="noreferrer">所有支持的 emoji 列表</a></p>',4))]))}}),y={$style:m},x=t(E,[["__cssModules",y]]);export{M as __pageData,x as default};
